% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learner_RWeka_regr_smo_reg.R
\name{mlr_learners_regr.smo_reg}
\alias{mlr_learners_regr.smo_reg}
\alias{LearnerRegrSMOreg}
\title{Regression Support Vector Machine Learner}
\description{
Support Vector Machine for regression.
Calls \code{\link[RWeka:make_Weka_classifier]{RWeka::make_Weka_classifier()}} from \CRANpkg{RWeka}.
}
\section{Custom mlr3 parameters}{

\itemize{
\item \code{output_debug_info}:
\itemize{
\item original id: output-debug-info
}
\item \code{do_not_check_capabilities}:
\itemize{
\item original id: do-not-check-capabilities
}
\item \code{num_decimal_places}:
\itemize{
\item original id: num-decimal-places
}
\item \code{batch_size}:
\itemize{
\item original id: batch-size
}
\item \code{T_improved}:
\itemize{
\item original id: T
}
\item \code{V_improved}:
\itemize{
\item original id: V
}
\item \code{P_improved}:
\itemize{
\item original id: P
}
\item \code{L_improved}:
\itemize{
\item original id: L (duplicated L for when I is set to RegSMOImproved)
}
\item \code{W_improved}:
\itemize{
\item original id: W
}
\item \code{C_poly}:
\itemize{
\item original id: C
}
\item \code{E_poly}:
\itemize{
\item original id: E
}
\item \code{L_poly}:
\itemize{
\item original id: L (duplicated L for when K is set to PolyKernel)
}
\item Reason for change: This learner contains changed ids of the following control arguments
since their ids contain irregular pattern
}
}

\section{Dictionary}{

This \link[mlr3:Learner]{Learner} can be instantiated via \link[mlr3:mlr_sugar]{lrn()}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{lrn("regr.smo_reg")
}\if{html}{\out{</div>}}
}

\section{Meta Information}{

\itemize{
\item Task type: \dQuote{regr}
\item Predict Types: \dQuote{response}
\item Feature Types: \dQuote{logical}, \dQuote{integer}, \dQuote{numeric}, \dQuote{factor}, \dQuote{ordered}
\item Required Packages: \CRANpkg{mlr3}, \CRANpkg{RWeka}
}
}

\section{Parameters}{
\tabular{lllll}{
   Id \tab Type \tab Default \tab Levels \tab Range \cr
   subset \tab untyped \tab - \tab  \tab - \cr
   na.action \tab untyped \tab - \tab  \tab - \cr
   C \tab numeric \tab 1 \tab  \tab \eqn{(-\infty, \infty)}{(-Inf, Inf)} \cr
   N \tab character \tab 0 \tab 0, 1, 2 \tab - \cr
   I \tab character \tab RegSMOImproved \tab RegSMO, RegSMOImproved \tab - \cr
   K \tab character \tab PolyKernel \tab NormalizedPolyKernel, PolyKernel, Puk, RBFKernel, StringKernel \tab - \cr
   T_improved \tab numeric \tab 0.001 \tab  \tab \eqn{(-\infty, \infty)}{(-Inf, Inf)} \cr
   V_improved \tab logical \tab TRUE \tab TRUE, FALSE \tab - \cr
   P_improved \tab numeric \tab 1e-12 \tab  \tab \eqn{(-\infty, \infty)}{(-Inf, Inf)} \cr
   L_improved \tab numeric \tab 0.001 \tab  \tab \eqn{(-\infty, \infty)}{(-Inf, Inf)} \cr
   W_improved \tab integer \tab 1 \tab  \tab \eqn{(-\infty, \infty)}{(-Inf, Inf)} \cr
   C_poly \tab integer \tab 250007 \tab  \tab \eqn{(-\infty, \infty)}{(-Inf, Inf)} \cr
   E_poly \tab numeric \tab 1 \tab  \tab \eqn{(-\infty, \infty)}{(-Inf, Inf)} \cr
   L_poly \tab logical \tab FALSE \tab TRUE, FALSE \tab - \cr
   output_debug_info \tab logical \tab FALSE \tab TRUE, FALSE \tab - \cr
   do_not_check_capabilities \tab logical \tab FALSE \tab TRUE, FALSE \tab - \cr
   num_decimal_places \tab integer \tab 2 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   batch_size \tab integer \tab 100 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   options \tab untyped \tab NULL \tab  \tab - \cr
}
}

\examples{
\dontshow{if (mlr3misc::require_namespaces(lrn("regr.smo_reg")$packages, quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# Define the Learner
learner = mlr3::lrn("regr.smo_reg")
print(learner)

# Define a Task
task = mlr3::tsk("mtcars")

# Create train and test set
ids = mlr3::partition(task)

# Train the learner on the training ids
learner$train(task, row_ids = ids$train)

print(learner$model)


# Make predictions for the test rows
predictions = learner$predict(task, row_ids = ids$test)

# Score the predictions
predictions$score()
\dontshow{\}) # examplesIf}
}
\references{
Shevade S, Keerthi S, Bhattacharyya C, Murthy K (1999).
\dQuote{Improvements to the SMO Algorithm for SVM Regression.}
In \emph{IEEE Transactions on Neural Networks}.
}
\seealso{
\itemize{
\item \link[mlr3misc:Dictionary]{Dictionary} of \link[mlr3:Learner]{Learners}: \link[mlr3:mlr_learners]{mlr3::mlr_learners}.
\item \code{as.data.table(mlr_learners)} for a table of available \link[mlr3:Learner]{Learners} in the running session (depending on the loaded packages).
\item Chapter in the \href{https://mlr3book.mlr-org.com/}{mlr3book}: \url{https://mlr3book.mlr-org.com/basics.html#learners}
\item \CRANpkg{mlr3learners} for a selection of recommended learners.
\item \CRANpkg{mlr3cluster} for unsupervised clustering learners.
\item \CRANpkg{mlr3pipelines} to combine learners with pre- and postprocessing steps.
\item \CRANpkg{mlr3tuning} for tuning of hyperparameters, \CRANpkg{mlr3tuningspaces} for established default tuning spaces.
}
}
\author{
damirpolat
}
\section{Super classes}{
\code{\link[mlr3:Learner]{mlr3::Learner}} -> \code{\link[mlr3:LearnerRegr]{mlr3::LearnerRegr}} -> \code{LearnerRegrSMOreg}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LearnerRegrSMOreg-new}{\code{LearnerRegrSMOreg$new()}}
\item \href{#method-LearnerRegrSMOreg-clone}{\code{LearnerRegrSMOreg$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="base_learner"><a href='../../mlr3/html/Learner.html#method-Learner-base_learner'><code>mlr3::Learner$base_learner()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="format"><a href='../../mlr3/html/Learner.html#method-Learner-format'><code>mlr3::Learner$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="help"><a href='../../mlr3/html/Learner.html#method-Learner-help'><code>mlr3::Learner$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict"><a href='../../mlr3/html/Learner.html#method-Learner-predict'><code>mlr3::Learner$predict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict_newdata"><a href='../../mlr3/html/Learner.html#method-Learner-predict_newdata'><code>mlr3::Learner$predict_newdata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="print"><a href='../../mlr3/html/Learner.html#method-Learner-print'><code>mlr3::Learner$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="reset"><a href='../../mlr3/html/Learner.html#method-Learner-reset'><code>mlr3::Learner$reset()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="train"><a href='../../mlr3/html/Learner.html#method-Learner-train'><code>mlr3::Learner$train()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerRegrSMOreg-new"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerRegrSMOreg-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerRegrSMOreg$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerRegrSMOreg-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerRegrSMOreg-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerRegrSMOreg$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
