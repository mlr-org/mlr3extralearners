% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learner_CoxBoost_surv_cv_coxboost.R
\name{mlr_learners_surv.cv_coxboost}
\alias{mlr_learners_surv.cv_coxboost}
\alias{LearnerSurvCVCoxboost}
\title{Survival Cox Model with Cross-Validation Likelihood Based Boosting Learner}
\description{
Fits a survival Cox model using likelihood based boosting and interal cross-validation for the
number of steps.
Calls \code{\link[CoxBoost:CoxBoost]{CoxBoost::CoxBoost()}} or \code{\link[CoxBoost:cv.CoxBoost]{CoxBoost::cv.CoxBoost()}} from package 'CoxBoost'.
}
\details{
Use \link{LearnerSurvCoxboost} and \link{LearnerSurvCVCoxboost} for Cox boosting without and with internal
cross-validation of boosting step number, respectively. Tuning using the internal optimizer in
\link{LearnerSurvCVCoxboost} may be more efficient when tuning \code{stepno} only. However, for tuning
multiple hyperparameters, \CRANpkg{mlr3tuning} and \link{LearnerSurvCoxboost} will likely give better
results.

If \code{penalty == "optimCoxBoostPenalty"} then \link[CoxBoost:optimCoxBoostPenalty]{CoxBoost::optimCoxBoostPenalty} is used to determine
the penalty value to be used in \link[CoxBoost:cv.CoxBoost]{CoxBoost::cv.CoxBoost}.

Three prediction types are returned for this learner, using the internal
\code{predict.CoxBoost()} function:
\enumerate{
\item \code{lp}: a vector of linear predictors (relative risk scores), one per
observation.
\item \code{crank}: same as \code{lp}.
\item \code{distr}: a 2d survival matrix, with observations as rows and time points
as columns. The internal transformation uses the Breslow estimator to compose
the survival distributions from the \code{lp} predictions.
}
}
\section{Dictionary}{

This \link{Learner} can be instantiated via the \link[mlr3misc:Dictionary]{dictionary} \link{mlr_learners} or with the associated sugar function \code{\link[=lrn]{lrn()}}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{mlr_learners$get("surv.cv_coxboost")
lrn("surv.cv_coxboost")
}\if{html}{\out{</div>}}
}

\section{Meta Information}{

\itemize{
\item Task type: \dQuote{surv}
\item Predict Types: \dQuote{crank}, \dQuote{distr}, \dQuote{lp}
\item Feature Types: \dQuote{integer}, \dQuote{numeric}
\item Required Packages: \CRANpkg{mlr3}, \CRANpkg{mlr3proba}, \CRANpkg{mlr3extralearners}, \CRANpkg{CoxBoost}, \CRANpkg{pracma}
}
}

\section{Parameters}{
\tabular{lllll}{
   Id \tab Type \tab Default \tab Levels \tab Range \cr
   maxstepno \tab integer \tab 100 \tab  \tab \eqn{[0, \infty)}{[0, Inf)} \cr
   K \tab integer \tab 10 \tab  \tab \eqn{[2, \infty)}{[2, Inf)} \cr
   type \tab character \tab verweij \tab verweij, naive \tab - \cr
   folds \tab untyped \tab NULL \tab  \tab - \cr
   minstepno \tab integer \tab 50 \tab  \tab \eqn{[0, \infty)}{[0, Inf)} \cr
   start.penalty \tab numeric \tab - \tab  \tab \eqn{(-\infty, \infty)}{(-Inf, Inf)} \cr
   iter.max \tab integer \tab 10 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   upper.margin \tab numeric \tab 0.05 \tab  \tab \eqn{[0, 1]}{[0, 1]} \cr
   unpen.index \tab untyped \tab - \tab  \tab - \cr
   standardize \tab logical \tab TRUE \tab TRUE, FALSE \tab - \cr
   penalty \tab numeric \tab - \tab  \tab \eqn{(-\infty, \infty)}{(-Inf, Inf)} \cr
   criterion \tab character \tab pscore \tab pscore, score, hpscore, hscore \tab - \cr
   stepsize.factor \tab numeric \tab 1 \tab  \tab \eqn{(-\infty, \infty)}{(-Inf, Inf)} \cr
   sf.scheme \tab character \tab sigmoid \tab sigmoid, linear \tab - \cr
   pendistmat \tab untyped \tab - \tab  \tab - \cr
   connected.index \tab untyped \tab - \tab  \tab - \cr
   x.is.01 \tab logical \tab FALSE \tab TRUE, FALSE \tab - \cr
   return.score \tab logical \tab TRUE \tab TRUE, FALSE \tab - \cr
   trace \tab logical \tab FALSE \tab TRUE, FALSE \tab - \cr
   at.step \tab untyped \tab - \tab  \tab - \cr
}
}

\section{Installation}{

The package 'CoxBoost' is not on CRAN and has to be installed from GitHub using
\code{remotes::install_github("binderh/CoxBoost")}.
}

\examples{
learner = mlr3::lrn("surv.cv_coxboost")
print(learner)

# available parameters:
learner$param_set$ids()
}
\references{
Binder, Harald, Allignol, Arthur, Schumacher, Martin, Beyersmann, Jan (2009).
\dQuote{Boosting for high-dimensional time-to-event data with competing risks.}
\emph{Bioinformatics}, \bold{25}(7), 890--896.
}
\seealso{
\itemize{
\item \link[mlr3misc:Dictionary]{Dictionary} of \link[mlr3:Learner]{Learners}: \link[mlr3:mlr_learners]{mlr3::mlr_learners}.
\item \code{as.data.table(mlr_learners)} for a table of available \link[=Learner]{Learners} in the running session (depending on the loaded packages).
\item Chapter in the \href{https://mlr3book.mlr-org.com/}{mlr3book}: \url{https://mlr3book.mlr-org.com/basics.html#learners}
\item \CRANpkg{mlr3learners} for a selection of recommended learners.
\item \CRANpkg{mlr3cluster} for unsupervised clustering learners.
\item \CRANpkg{mlr3pipelines} to combine learners with pre- and postprocessing steps.
\item \CRANpkg{mlr3tuning} for tuning of hyperparameters, \CRANpkg{mlr3tuningspaces} for established default tuning spaces.
}
}
\author{
RaphaelS1
}
\section{Super classes}{
\code{\link[mlr3:Learner]{mlr3::Learner}} -> \code{\link[mlr3proba:LearnerSurv]{mlr3proba::LearnerSurv}} -> \code{LearnerSurvCVCoxboost}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LearnerSurvCVCoxboost-new}{\code{LearnerSurvCVCoxboost$new()}}
\item \href{#method-LearnerSurvCVCoxboost-selected_features}{\code{LearnerSurvCVCoxboost$selected_features()}}
\item \href{#method-LearnerSurvCVCoxboost-clone}{\code{LearnerSurvCVCoxboost$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="base_learner"><a href='../../mlr3/html/Learner.html#method-Learner-base_learner'><code>mlr3::Learner$base_learner()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="format"><a href='../../mlr3/html/Learner.html#method-Learner-format'><code>mlr3::Learner$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="help"><a href='../../mlr3/html/Learner.html#method-Learner-help'><code>mlr3::Learner$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict"><a href='../../mlr3/html/Learner.html#method-Learner-predict'><code>mlr3::Learner$predict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict_newdata"><a href='../../mlr3/html/Learner.html#method-Learner-predict_newdata'><code>mlr3::Learner$predict_newdata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="print"><a href='../../mlr3/html/Learner.html#method-Learner-print'><code>mlr3::Learner$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="reset"><a href='../../mlr3/html/Learner.html#method-Learner-reset'><code>mlr3::Learner$reset()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="train"><a href='../../mlr3/html/Learner.html#method-Learner-train'><code>mlr3::Learner$train()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerSurvCVCoxboost-new"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerSurvCVCoxboost-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerSurvCVCoxboost$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerSurvCVCoxboost-selected_features"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerSurvCVCoxboost-selected_features}{}}}
\subsection{Method \code{selected_features()}}{
Returns the set of selected features which have non-zero coefficients.
Calls the internal \code{coef.CoxBoost()} function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerSurvCVCoxboost$selected_features(at_step = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{at_step}}{(\code{integer(1)})\cr
Which boosting step to get the coefficients for. If no step is given
(default), the final boosting step is used.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(\code{character()}) vector of feature names.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerSurvCVCoxboost-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerSurvCVCoxboost-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerSurvCVCoxboost$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
