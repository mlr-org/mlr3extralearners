% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learner_partykit_classif_mob.R
\name{mlr_learners_classif.mob}
\alias{mlr_learners_classif.mob}
\alias{LearnerClassifMob}
\title{Classification Model-based Recursive Partitioning Learner}
\description{
Model-based recursive partitioning algorithm.
Calls \code{\link[partykit:mob]{partykit::mob()}} from \CRANpkg{mob}.
}
\section{Dictionary}{

This \link[mlr3:Learner]{Learner} can be instantiated via \link[mlr3:mlr_sugar]{lrn()}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{lrn("classif.mob")
}\if{html}{\out{</div>}}
}

\section{Meta Information}{

\itemize{
\item Task type: \dQuote{classif}
\item Predict Types: \dQuote{response}, \dQuote{prob}
\item Feature Types: \dQuote{logical}, \dQuote{integer}, \dQuote{numeric}, \dQuote{character}, \dQuote{factor}, \dQuote{ordered}
\item Required Packages: \CRANpkg{mlr3}, \CRANpkg{mlr3extralearners}, \CRANpkg{partykit}, \CRANpkg{sandwich}, \CRANpkg{coin}
}
}

\section{Parameters}{
\tabular{lllll}{
   Id \tab Type \tab Default \tab Levels \tab Range \cr
   rhs \tab untyped \tab - \tab  \tab - \cr
   fit \tab untyped \tab - \tab  \tab - \cr
   offset \tab untyped \tab - \tab  \tab - \cr
   cluster \tab untyped \tab - \tab  \tab - \cr
   alpha \tab numeric \tab 0.05 \tab  \tab \eqn{[0, 1]}{[0, 1]} \cr
   bonferroni \tab logical \tab TRUE \tab TRUE, FALSE \tab - \cr
   minsize \tab integer \tab - \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   minsplit \tab integer \tab - \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   minbucket \tab integer \tab - \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   maxdepth \tab integer \tab Inf \tab  \tab \eqn{[0, \infty)}{[0, Inf)} \cr
   mtry \tab integer \tab Inf \tab  \tab \eqn{[0, \infty)}{[0, Inf)} \cr
   trim \tab numeric \tab 0.1 \tab  \tab \eqn{[0, \infty)}{[0, Inf)} \cr
   breakties \tab logical \tab FALSE \tab TRUE, FALSE \tab - \cr
   parm \tab untyped \tab - \tab  \tab - \cr
   dfsplit \tab integer \tab - \tab  \tab \eqn{[0, \infty)}{[0, Inf)} \cr
   prune \tab untyped \tab - \tab  \tab - \cr
   restart \tab logical \tab TRUE \tab TRUE, FALSE \tab - \cr
   verbose \tab logical \tab FALSE \tab TRUE, FALSE \tab - \cr
   caseweights \tab logical \tab TRUE \tab TRUE, FALSE \tab - \cr
   ytype \tab character \tab vector \tab vector, matrix, data.frame \tab - \cr
   xtype \tab character \tab matrix \tab vector, matrix, data.frame \tab - \cr
   terminal \tab untyped \tab "object" \tab  \tab - \cr
   inner \tab untyped \tab "object" \tab  \tab - \cr
   model \tab logical \tab TRUE \tab TRUE, FALSE \tab - \cr
   numsplit \tab character \tab left \tab left, center \tab - \cr
   catsplit \tab character \tab binary \tab binary, multiway \tab - \cr
   vcov \tab character \tab opg \tab opg, info, sandwich \tab - \cr
   ordinal \tab character \tab chisq \tab chisq, max, L2 \tab - \cr
   nrep \tab integer \tab 10000 \tab  \tab \eqn{[0, \infty)}{[0, Inf)} \cr
   applyfun \tab untyped \tab - \tab  \tab - \cr
   cores \tab integer \tab NULL \tab  \tab \eqn{(-\infty, \infty)}{(-Inf, Inf)} \cr
   additional \tab untyped \tab - \tab  \tab - \cr
   predict_fun \tab untyped \tab - \tab  \tab - \cr
}
}

\examples{
library(mlr3)
logit_ = function(y, x, start = NULL, weights = NULL, offset = NULL, ...) {
  glm(y ~ 1, family = binomial, start = start, ...)
}
learner = LearnerClassifMob$new()
learner$param_set$values$rhs = "."
learner$param_set$values$fit = logit_
learner$param_set$values$additional = list(maxit = 100)
learner$feature_types = c("logical", "integer", "numeric", "factor", "ordered")
learner$properties = c("twoclass", "weights")

predict_fun = function(object, newdata, task, .type) {
  p = unname(predict(object, newdata = newdata, type = "response"))
  levs = task$levels(task$target_names)[[1L]]

  if (.type == "response") {
    ifelse(p < 0.5, levs[1L], levs[2L])
  } else {
    prob_vector_to_matrix(p, levs)
  }
}
task = tsk("breast_cancer")
learner$param_set$values$predict_fun = predict_fun
ids = partition(task)
learner$train(task, row_ids = ids$train)
learner$predict(task, row_ids = ids$test)
}
\references{
Hothorn T, Zeileis A (2015).
\dQuote{partykit: A Modular Toolkit for Recursive Partytioning in R.}
\emph{Journal of Machine Learning Research}, \bold{16}(118), 3905-3909.
\url{http://jmlr.org/papers/v16/hothorn15a.html}.

Hothorn T, Hornik K, Zeileis A (2006).
\dQuote{Unbiased Recursive Partitioning: A Conditional Inference Framework.}
\emph{Journal of Computational and Graphical Statistics}, \bold{15}(3), 651--674.
\doi{10.1198/106186006x133933}, \url{https://doi.org/10.1198/106186006x133933}.
}
\seealso{
\itemize{
\item \link[mlr3misc:Dictionary]{Dictionary} of \link[mlr3:Learner]{Learners}: \link[mlr3:mlr_learners]{mlr3::mlr_learners}.
\item \code{as.data.table(mlr_learners)} for a table of available \link[mlr3:Learner]{Learners} in the running session (depending on the loaded packages).
\item Chapter in the \href{https://mlr3book.mlr-org.com/}{mlr3book}: \url{https://mlr3book.mlr-org.com/basics.html#learners}
\item \CRANpkg{mlr3learners} for a selection of recommended learners.
\item \CRANpkg{mlr3cluster} for unsupervised clustering learners.
\item \CRANpkg{mlr3pipelines} to combine learners with pre- and postprocessing steps.
\item \CRANpkg{mlr3tuning} for tuning of hyperparameters, \CRANpkg{mlr3tuningspaces} for established default tuning spaces.
}
}
\author{
sumny
}
\section{Super classes}{
\code{\link[mlr3:Learner]{mlr3::Learner}} -> \code{\link[mlr3:LearnerClassif]{mlr3::LearnerClassif}} -> \code{LearnerClassifMob}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LearnerClassifMob-new}{\code{LearnerClassifMob$new()}}
\item \href{#method-LearnerClassifMob-clone}{\code{LearnerClassifMob$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="base_learner"><a href='../../mlr3/html/Learner.html#method-Learner-base_learner'><code>mlr3::Learner$base_learner()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="format"><a href='../../mlr3/html/Learner.html#method-Learner-format'><code>mlr3::Learner$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="help"><a href='../../mlr3/html/Learner.html#method-Learner-help'><code>mlr3::Learner$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict"><a href='../../mlr3/html/Learner.html#method-Learner-predict'><code>mlr3::Learner$predict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict_newdata"><a href='../../mlr3/html/Learner.html#method-Learner-predict_newdata'><code>mlr3::Learner$predict_newdata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="print"><a href='../../mlr3/html/Learner.html#method-Learner-print'><code>mlr3::Learner$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="reset"><a href='../../mlr3/html/Learner.html#method-Learner-reset'><code>mlr3::Learner$reset()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="train"><a href='../../mlr3/html/Learner.html#method-Learner-train'><code>mlr3::Learner$train()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerClassifMob-new"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerClassifMob-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerClassifMob$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerClassifMob-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerClassifMob-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerClassifMob$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
