% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learner_tabnet_classif_tabnet.R
\name{mlr_learners_classif.tabnet}
\alias{mlr_learners_classif.tabnet}
\alias{LearnerClassifTabNet}
\title{Classification TabNet Learner}
\description{
Classification TabNet Learner

Classification TabNet Learner
}
\section{Dictionary}{
 This \link{Learner} can be instantiated via the
\link[mlr3misc:Dictionary]{dictionary} \link{mlr_learners} or with the associated
sugar function \code{\link[=lrn]{lrn()}}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{mlr_learners$get("classif.tabnet")
lrn("classif.tabnet")
}\if{html}{\out{</div>}}
}

\section{Meta Information}{

\itemize{
\item Task type: \dQuote{classif}
\item Predict Types: \dQuote{response}, \dQuote{prob}
\item Feature Types: \dQuote{logical}, \dQuote{integer}, \dQuote{numeric}, \dQuote{factor}, \dQuote{ordered}
\item Required Packages: \CRANpkg{mlr3}, \CRANpkg{tabnet}
}
}

\section{Parameters}{
\tabular{lllll}{
   Id \tab Type \tab Default \tab Levels \tab Range \cr
   num_threads \tab integer \tab 1 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   batch_size \tab integer \tab 256 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   penalty \tab numeric \tab 0.001 \tab  \tab \eqn{(-\infty, \infty)}{(-Inf, Inf)} \cr
   clip_value \tab untyped \tab  \tab  \tab - \cr
   loss \tab character \tab auto \tab auto, mse, cross_entropy \tab - \cr
   epochs \tab integer \tab 5 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   drop_last \tab logical \tab FALSE \tab TRUE, FALSE \tab - \cr
   decision_width \tab integer \tab 8 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   attention_width \tab integer \tab 8 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   num_steps \tab integer \tab 3 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   feature_reusage \tab numeric \tab 1.3 \tab  \tab \eqn{[0, \infty)}{[0, Inf)} \cr
   mask_type \tab character \tab sparsemax \tab sparsemax, entmax \tab - \cr
   virtual_batch_size \tab integer \tab 128 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   valid_split \tab numeric \tab 0 \tab  \tab \eqn{[0, 1]}{[0, 1]} \cr
   learn_rate \tab numeric \tab 0.02 \tab  \tab \eqn{[0, 1]}{[0, 1]} \cr
   optimizer \tab untyped \tab adam \tab  \tab - \cr
   lr_scheduler \tab untyped \tab  \tab  \tab - \cr
   lr_decay \tab numeric \tab 0.1 \tab  \tab \eqn{[0, 1]}{[0, 1]} \cr
   step_size \tab integer \tab 30 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   checkpoint_epochs \tab integer \tab 10 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   cat_emb_dim \tab integer \tab 1 \tab  \tab \eqn{[0, \infty)}{[0, Inf)} \cr
   num_independent \tab integer \tab 2 \tab  \tab \eqn{[0, \infty)}{[0, Inf)} \cr
   num_shared \tab integer \tab 2 \tab  \tab \eqn{[0, \infty)}{[0, Inf)} \cr
   momentum \tab numeric \tab 0.02 \tab  \tab \eqn{[0, 1]}{[0, 1]} \cr
   pretraining_ratio \tab numeric \tab 0.5 \tab  \tab \eqn{[0, 1]}{[0, 1]} \cr
   verbose \tab logical \tab FALSE \tab TRUE, FALSE \tab - \cr
   device \tab character \tab auto \tab auto, cpu, cuda \tab - \cr
   importance_sample_size \tab integer \tab - \tab  \tab \eqn{[0, 1e+05]}{[0, 1e+05]} \cr
}
}

\examples{
\dontrun{
library(mlr3)
library(mlr3torch)
task = tsk("german_credit")
lrn = lrn("classif.tabnet")

lrn$param_set$values$epochs = 10
lrn$param_set$values$attention_width = 8
lrn$train(task)
}
}
\references{
\verb{r format_bib("arik2021tabnet")}
}
\seealso{
\itemize{
\item \link[mlr3misc:Dictionary]{Dictionary} of \link[mlr3:Learner]{Learners}: \link[mlr3:mlr_learners]{mlr3::mlr_learners}.
\item \code{as.data.table(mlr_learners)} for a table of available \link[=Learner]{Learners} in the running session (depending on the loaded packages).
\item Chapter in the \href{https://mlr3book.mlr-org.com/}{mlr3book}: \url{https://mlr3book.mlr-org.com/basics.html#learners}
\item \CRANpkg{mlr3learners} for a selection of recommended learners.
\item \CRANpkg{mlr3cluster} for unsupervised clustering learners.
\item \CRANpkg{mlr3pipelines} to combine learners with pre- and postprocessing steps.
\item \CRANpkg{mlr3tuning} for tuning of hyperparameters, \CRANpkg{mlr3tuningspaces} for established default tuning spaces.
}
}
\author{
Lukas Burk
}
\section{Super classes}{
\code{\link[mlr3:Learner]{mlr3::Learner}} -> \code{\link[mlr3:LearnerClassif]{mlr3::LearnerClassif}} -> \code{LearnerClassifTabNet}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LearnerClassifTabNet-new}{\code{LearnerClassifTabNet$new()}}
\item \href{#method-LearnerClassifTabNet-importance}{\code{LearnerClassifTabNet$importance()}}
\item \href{#method-LearnerClassifTabNet-clone}{\code{LearnerClassifTabNet$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="base_learner"><a href='../../mlr3/html/Learner.html#method-Learner-base_learner'><code>mlr3::Learner$base_learner()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="format"><a href='../../mlr3/html/Learner.html#method-Learner-format'><code>mlr3::Learner$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="help"><a href='../../mlr3/html/Learner.html#method-Learner-help'><code>mlr3::Learner$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict"><a href='../../mlr3/html/Learner.html#method-Learner-predict'><code>mlr3::Learner$predict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict_newdata"><a href='../../mlr3/html/Learner.html#method-Learner-predict_newdata'><code>mlr3::Learner$predict_newdata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="print"><a href='../../mlr3/html/Learner.html#method-Learner-print'><code>mlr3::Learner$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="reset"><a href='../../mlr3/html/Learner.html#method-Learner-reset'><code>mlr3::Learner$reset()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="train"><a href='../../mlr3/html/Learner.html#method-Learner-train'><code>mlr3::Learner$train()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerClassifTabNet-new"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerClassifTabNet-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerClassifTabNet$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerClassifTabNet-importance"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerClassifTabNet-importance}{}}}
\subsection{Method \code{importance()}}{
The importance scores are extracted from the slot \code{.$model$fit$importances}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerClassifTabNet$importance()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Named \code{numeric()}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerClassifTabNet-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerClassifTabNet-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerClassifTabNet$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
