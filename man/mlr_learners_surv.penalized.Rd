% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learner_penalized_surv_penalized.R
\name{mlr_learners_surv.penalized}
\alias{mlr_learners_surv.penalized}
\alias{LearnerSurvPenalized}
\title{Survival L1 and L2 Penalized Cox Learner}
\description{
Penalized (L1 and L2) Cox Proportional Hazards model.
Calls \code{\link[penalized:penalized]{penalized::penalized()}} from \CRANpkg{penalized}.
}
\details{
The \code{penalized} and \code{unpenalized} arguments in the learner are implemented slightly
differently than in \code{\link[penalized:penalized]{penalized::penalized()}}. Here, there is no parameter for \code{penalized} but
instead it is assumed that every variable is penalized unless stated in the \code{unpenalized}
parameter.
}
\section{Prediction types}{

This learner returns two prediction types:
\enumerate{
\item \code{distr}: a survival matrix in two dimensions, where observations are
represented in rows and time points in columns.
Calculated using the internal \code{\link[penalized:predict]{penalized::predict()}} function.
By default the Breslow estimator \code{\link[penalized:breslow]{penalized::breslow()}} is used for computing
the baseline hazard.
\item \code{crank}: the expected mortality using \code{\link[mlr3proba:dot-surv_return]{mlr3proba::.surv_return()}}.
}
}

\section{Initial parameter values}{

\itemize{
\item \code{trace} is set to \code{"FALSE"} to disable printing output during model training.
}
}

\section{Dictionary}{

This \link[mlr3:Learner]{Learner} can be instantiated via \link[mlr3:mlr_sugar]{lrn()}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{lrn("surv.penalized")
}\if{html}{\out{</div>}}
}

\section{Meta Information}{

\itemize{
\item Task type: \dQuote{surv}
\item Predict Types: \dQuote{crank}, \dQuote{distr}
\item Feature Types: \dQuote{logical}, \dQuote{integer}, \dQuote{numeric}, \dQuote{factor}
\item Required Packages: \CRANpkg{mlr3}, \CRANpkg{mlr3proba}, \CRANpkg{mlr3extralearners}, \CRANpkg{penalized}, \CRANpkg{pracma}
}
}

\section{Parameters}{
\tabular{lllll}{
   Id \tab Type \tab Default \tab Levels \tab Range \cr
   unpenalized \tab untyped \tab - \tab  \tab - \cr
   lambda1 \tab untyped \tab 0 \tab  \tab - \cr
   lambda2 \tab untyped \tab 0 \tab  \tab - \cr
   positive \tab logical \tab FALSE \tab TRUE, FALSE \tab - \cr
   fusedl \tab logical \tab FALSE \tab TRUE, FALSE \tab - \cr
   startbeta \tab numeric \tab - \tab  \tab \eqn{(-\infty, \infty)}{(-Inf, Inf)} \cr
   startgamma \tab numeric \tab - \tab  \tab \eqn{(-\infty, \infty)}{(-Inf, Inf)} \cr
   steps \tab integer \tab 1 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   epsilon \tab numeric \tab 1e-10 \tab  \tab \eqn{[0, 1]}{[0, 1]} \cr
   maxiter \tab integer \tab - \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   standardize \tab logical \tab FALSE \tab TRUE, FALSE \tab - \cr
   trace \tab logical \tab TRUE \tab TRUE, FALSE \tab - \cr
}
}

\examples{
\dontshow{if (mlr3misc::require_namespaces(lrn("surv.penalized")$packages, quietly = TRUE)) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# Define the Learner
learner = mlr3::lrn("surv.penalized")
print(learner)

# Define a Task
task = mlr3::tsk("grace")

# Create train and test set
ids = mlr3::partition(task)

# Train the learner on the training ids
learner$train(task, row_ids = ids$train)

print(learner$model)


# Make predictions for the test rows
predictions = learner$predict(task, row_ids = ids$test)

# Score the predictions
predictions$score()
\dontshow{\}) # examplesIf}
}
\references{
Goeman, J J (2010).
\dQuote{L1 penalized estimation in the Cox proportional hazards model.}
\emph{Biometrical journal}, \bold{52}(1), 70--84.
}
\seealso{
\itemize{
\item \link[mlr3misc:Dictionary]{Dictionary} of \link[mlr3:Learner]{Learners}: \link[mlr3:mlr_learners]{mlr3::mlr_learners}.
\item \code{as.data.table(mlr_learners)} for a table of available \link[mlr3:Learner]{Learners} in the running session (depending on the loaded packages).
\item Chapter in the \href{https://mlr3book.mlr-org.com/}{mlr3book}: \url{https://mlr3book.mlr-org.com/basics.html#learners}
\item \CRANpkg{mlr3learners} for a selection of recommended learners.
\item \CRANpkg{mlr3cluster} for unsupervised clustering learners.
\item \CRANpkg{mlr3pipelines} to combine learners with pre- and postprocessing steps.
\item \CRANpkg{mlr3tuning} for tuning of hyperparameters, \CRANpkg{mlr3tuningspaces} for established default tuning spaces.
}
}
\author{
RaphaelS1
}
\section{Super classes}{
\code{\link[mlr3:Learner]{mlr3::Learner}} -> \code{\link[mlr3proba:LearnerSurv]{mlr3proba::LearnerSurv}} -> \code{LearnerSurvPenalized}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LearnerSurvPenalized-new}{\code{LearnerSurvPenalized$new()}}
\item \href{#method-LearnerSurvPenalized-selected_features}{\code{LearnerSurvPenalized$selected_features()}}
\item \href{#method-LearnerSurvPenalized-clone}{\code{LearnerSurvPenalized$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="base_learner"><a href='../../mlr3/html/Learner.html#method-Learner-base_learner'><code>mlr3::Learner$base_learner()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="encapsulate"><a href='../../mlr3/html/Learner.html#method-Learner-encapsulate'><code>mlr3::Learner$encapsulate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="format"><a href='../../mlr3/html/Learner.html#method-Learner-format'><code>mlr3::Learner$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="help"><a href='../../mlr3/html/Learner.html#method-Learner-help'><code>mlr3::Learner$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict"><a href='../../mlr3/html/Learner.html#method-Learner-predict'><code>mlr3::Learner$predict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict_newdata"><a href='../../mlr3/html/Learner.html#method-Learner-predict_newdata'><code>mlr3::Learner$predict_newdata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="print"><a href='../../mlr3/html/Learner.html#method-Learner-print'><code>mlr3::Learner$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="reset"><a href='../../mlr3/html/Learner.html#method-Learner-reset'><code>mlr3::Learner$reset()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="train"><a href='../../mlr3/html/Learner.html#method-Learner-train'><code>mlr3::Learner$train()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerSurvPenalized-new"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerSurvPenalized-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerSurvPenalized$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerSurvPenalized-selected_features"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerSurvPenalized-selected_features}{}}}
\subsection{Method \code{selected_features()}}{
Selected features are extracted with the method \code{coef()} of the S4 model
object, see \code{\link[penalized:penfit]{penalized::penfit()}}.
By default it returns features with non-zero coefficients.

\strong{Note}: Selected features can be retrieved only for datasets with
\code{numeric} features, as the presence of factors with multiple levels makes
it difficult to get the original feature names.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerSurvPenalized$selected_features()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character()}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerSurvPenalized-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerSurvPenalized-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerSurvPenalized$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
