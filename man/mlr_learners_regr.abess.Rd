% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learner_abess_regr_abess.R
\name{mlr_learners_regr.abess}
\alias{mlr_learners_regr.abess}
\alias{LearnerRegrAbess}
\title{Regression Abess Learner}
\description{
Adaptive best-subset selection for regression.
Calls \code{\link[abess:abess]{abess::abess()}} from \CRANpkg{abess}.
}
\section{Dictionary}{

This \link{Learner} can be instantiated via the \link[mlr3misc:Dictionary]{dictionary} \link{mlr_learners} or with the associated sugar function \code{\link[=lrn]{lrn()}}:

\if{html}{\out{<div class="sourceCode">}}\preformatted{mlr_learners$get("regr.abess")
lrn("regr.abess")
}\if{html}{\out{</div>}}
}

\section{Meta Information}{

\itemize{
\item Task type: \dQuote{regr}
\item Predict Types: \dQuote{response}
\item Feature Types: \dQuote{integer}, \dQuote{numeric}
\item Required Packages: \CRANpkg{mlr3}, \CRANpkg{abess}
}
}

\section{Parameters}{
\tabular{lllll}{
   Id \tab Type \tab Default \tab Levels \tab Range \cr
   family \tab character \tab gaussian \tab gaussian, mgaussian, poisson, gamma \tab - \cr
   tune.path \tab character \tab sequence \tab sequence, gsection \tab - \cr
   tune.type \tab character \tab gic \tab gic, aic, bic, ebic, cv \tab - \cr
   normalize \tab integer \tab NULL \tab  \tab \eqn{(-\infty, \infty)}{(-Inf, Inf)} \cr
   support.size \tab untyped \tab NULL \tab  \tab - \cr
   c.max \tab integer \tab 2 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   gs.range \tab untyped \tab NULL \tab  \tab - \cr
   lambda \tab numeric \tab 0 \tab  \tab \eqn{[0, \infty)}{[0, Inf)} \cr
   always.include \tab untyped \tab NULL \tab  \tab - \cr
   group.index \tab untyped \tab NULL \tab  \tab - \cr
   init.active.set \tab untyped \tab NULL \tab  \tab - \cr
   splicing.type \tab integer \tab 2 \tab  \tab \eqn{[1, 2]}{[1, 2]} \cr
   max.splicing.iter \tab integer \tab 20 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   screening.num \tab integer \tab NULL \tab  \tab \eqn{[0, \infty)}{[0, Inf)} \cr
   important.search \tab integer \tab NULL \tab  \tab \eqn{[0, \infty)}{[0, Inf)} \cr
   warm.start \tab logical \tab TRUE \tab TRUE, FALSE \tab - \cr
   nfolds \tab integer \tab 5 \tab  \tab \eqn{(-\infty, \infty)}{(-Inf, Inf)} \cr
   foldid \tab untyped \tab NULL \tab  \tab - \cr
   cov.update \tab logical \tab FALSE \tab TRUE, FALSE \tab - \cr
   newton \tab character \tab exact \tab exact, approx \tab - \cr
   newton.thresh \tab numeric \tab 1e-06 \tab  \tab \eqn{[0, \infty)}{[0, Inf)} \cr
   max.newton.iter \tab integer \tab NULL \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   early.stop \tab logical \tab FALSE \tab TRUE, FALSE \tab - \cr
   ic.scale \tab numeric \tab 1 \tab  \tab \eqn{[0, \infty)}{[0, Inf)} \cr
   num.threads \tab integer \tab 0 \tab  \tab \eqn{[0, \infty)}{[0, Inf)} \cr
   seed \tab integer \tab 1 \tab  \tab \eqn{(-\infty, \infty)}{(-Inf, Inf)} \cr
}
}

\section{Initial parameter values}{

\itemize{
\item \code{num.threads}: This parameter is initialized to 1 (default is 0) to avoid conflicts with the mlr3 parallelization.
}
}

\examples{
learner = mlr3::lrn("regr.abess")
print(learner)

# available parameters:
learner$param_set$ids()
}
\seealso{
\itemize{
\item \link[mlr3misc:Dictionary]{Dictionary} of \link[mlr3:Learner]{Learners}: \link[mlr3:mlr_learners]{mlr3::mlr_learners}.
\item \code{as.data.table(mlr_learners)} for a table of available \link[=Learner]{Learners} in the running session (depending on the loaded packages).
\item Chapter in the \href{https://mlr3book.mlr-org.com/}{mlr3book}: \url{https://mlr3book.mlr-org.com/basics.html#learners}
\item \CRANpkg{mlr3learners} for a selection of recommended learners.
\item \CRANpkg{mlr3cluster} for unsupervised clustering learners.
\item \CRANpkg{mlr3pipelines} to combine learners with pre- and postprocessing steps.
\item \CRANpkg{mlr3tuning} for tuning of hyperparameters, \CRANpkg{mlr3tuningspaces} for established default tuning spaces.
}
}
\author{
abess-team
}
\section{Super classes}{
\code{\link[mlr3:Learner]{mlr3::Learner}} -> \code{\link[mlr3:LearnerRegr]{mlr3::LearnerRegr}} -> \code{LearnerRegrAbess}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LearnerRegrAbess-new}{\code{LearnerRegrAbess$new()}}
\item \href{#method-LearnerRegrAbess-selected_features}{\code{LearnerRegrAbess$selected_features()}}
\item \href{#method-LearnerRegrAbess-clone}{\code{LearnerRegrAbess$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="base_learner"><a href='../../mlr3/html/Learner.html#method-Learner-base_learner'><code>mlr3::Learner$base_learner()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="format"><a href='../../mlr3/html/Learner.html#method-Learner-format'><code>mlr3::Learner$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="help"><a href='../../mlr3/html/Learner.html#method-Learner-help'><code>mlr3::Learner$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict"><a href='../../mlr3/html/Learner.html#method-Learner-predict'><code>mlr3::Learner$predict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict_newdata"><a href='../../mlr3/html/Learner.html#method-Learner-predict_newdata'><code>mlr3::Learner$predict_newdata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="print"><a href='../../mlr3/html/Learner.html#method-Learner-print'><code>mlr3::Learner$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="reset"><a href='../../mlr3/html/Learner.html#method-Learner-reset'><code>mlr3::Learner$reset()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="train"><a href='../../mlr3/html/Learner.html#method-Learner-train'><code>mlr3::Learner$train()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerRegrAbess-new"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerRegrAbess-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerRegrAbess$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerRegrAbess-selected_features"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerRegrAbess-selected_features}{}}}
\subsection{Method \code{selected_features()}}{
Extract the name of selected features from the model by \code{\link[abess:extract.abess]{abess::extract()}}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerRegrAbess$selected_features()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The names of selected features
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerRegrAbess-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerRegrAbess-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerRegrAbess$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
