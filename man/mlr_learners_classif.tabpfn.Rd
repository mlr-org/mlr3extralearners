% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learner_tabpfn_classif_tabpfn.R
\name{mlr_learners_classif.tabpfn}
\alias{mlr_learners_classif.tabpfn}
\alias{LearnerClassifTabPFN}
\title{TabPFN Classification Learner}
\description{
Foundation model for tabular data.
Uses \CRANpgk{reticulate} to interface with the \CRANpkg{tabpfn} Python package.
}
\section{Custom mlr3 parameters}{

\itemize{
\item \code{train_mode}: Controls the behavior of the \verb{$train()} method.
Possible options are \code{"fit"}, \code{"store"}, and \code{"both"} (default).
\itemize{
\item If \code{"fit"} is selected, the \verb{$train()} function creates a Python object
of the class \code{TabPFNClassifier} and calls its \code{fit()} function.
\item If \code{"store"} is selected, the \verb{$train()} function only stores the training data.
\item If \code{"both"} is selected, the \verb{$train()} function does both.
}

The fitted model (Python object), if created, is stored in the \verb{$model$fitted} slot.
The training data, if stored, can be accessed in the \verb{$model$X} and $model$y\verb{slots. Note that if you save this learner and load it later, the fitted model (Python object) in}$model$fitted\verb{will be corrupted due to serialization issues. Therefore, it is recommended to use the}"store"\code{or}"both"\verb{option to store the training data. When calling}$predict()\verb{without a fitted model stored, the model will be fitted on-the-fly and stored in}$model$fitted` henceforth.
}
}

\section{Initial parameter values}{

}

\section{Dictionary}{

This [Learner][mlr3::Learner] can be instantiated via [lrn()][mlr3::lrn]:

\if{html}{\out{<div class="sourceCode">}}\preformatted{lrn("

[mlr3::Learner]: R:mlr3::Learner
[mlr3::lrn]: R:mlr3::lrn
}\if{html}{\out{</div>}}
}

\references{
Chen, Tianqi, Guestrin, Carlos (2016).
\dQuote{Xgboost: A scalable tree boosting system.}
In \emph{Proceedings of the 22nd ACM SIGKDD Conference on Knowledge Discovery and Data Mining}, 785--794.
ACM.
\doi{10.1145/2939672.2939785}.

Avinash B, Hyunsu C, Toby H (2022).
\dQuote{Survival Regression with Accelerated Failure Time Model in XGBoost.}
\emph{Journal of Computational and Graphical Statistics}.
ISSN 15372715, \doi{10.1080/10618600.2022.2067548}.
}
\seealso{
\itemize{
\item \link[mlr3misc:Dictionary]{Dictionary} of \link[mlr3:Learner]{Learners}: \link[mlr3:mlr_learners]{mlr3::mlr_learners}.
\item \code{as.data.table(mlr_learners)} for a table of available \link[mlr3:Learner]{Learners} in the running session (depending on the loaded packages).
\item Chapter in the \href{https://mlr3book.mlr-org.com/}{mlr3book}: \url{https://mlr3book.mlr-org.com/basics.html#learners}
\item \CRANpkg{mlr3learners} for a selection of recommended learners.
\item \CRANpkg{mlr3cluster} for unsupervised clustering learners.
\item \CRANpkg{mlr3pipelines} to combine learners with pre- and postprocessing steps.
\item \CRANpkg{mlr3tuning} for tuning of hyperparameters, \CRANpkg{mlr3tuningspaces} for established default tuning spaces.
}
}
\author{
b-zhou
}
\section{Super classes}{
\code{\link[mlr3:Learner]{mlr3::Learner}} -> \code{\link[mlr3:LearnerClassif]{mlr3::LearnerClassif}} -> \code{LearnerClassifTabPFN}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LearnerClassifTabPFN-new}{\code{LearnerClassifTabPFN$new()}}
\item \href{#method-LearnerClassifTabPFN-clone}{\code{LearnerClassifTabPFN$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="base_learner"><a href='../../mlr3/html/Learner.html#method-Learner-base_learner'><code>mlr3::Learner$base_learner()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="configure"><a href='../../mlr3/html/Learner.html#method-Learner-configure'><code>mlr3::Learner$configure()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="encapsulate"><a href='../../mlr3/html/Learner.html#method-Learner-encapsulate'><code>mlr3::Learner$encapsulate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="format"><a href='../../mlr3/html/Learner.html#method-Learner-format'><code>mlr3::Learner$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="help"><a href='../../mlr3/html/Learner.html#method-Learner-help'><code>mlr3::Learner$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict"><a href='../../mlr3/html/Learner.html#method-Learner-predict'><code>mlr3::Learner$predict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict_newdata"><a href='../../mlr3/html/Learner.html#method-Learner-predict_newdata'><code>mlr3::Learner$predict_newdata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="print"><a href='../../mlr3/html/Learner.html#method-Learner-print'><code>mlr3::Learner$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="reset"><a href='../../mlr3/html/Learner.html#method-Learner-reset'><code>mlr3::Learner$reset()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="train"><a href='../../mlr3/html/Learner.html#method-Learner-train'><code>mlr3::Learner$train()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerClassifTabPFN-new"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerClassifTabPFN-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerClassifTabPFN$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerClassifTabPFN-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerClassifTabPFN-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerClassifTabPFN$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
