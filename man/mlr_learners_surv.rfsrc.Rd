% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learner_randomForestSRC_surv_rfsrc.R
\name{mlr_learners_surv.rfsrc}
\alias{mlr_learners_surv.rfsrc}
\alias{LearnerSurvRandomForestSRC}
\title{Survival Random Forest SRC Learner}
\description{
Calls \link[randomForestSRC:rfsrc]{randomForestSRC::rfsrc} from package \CRANpkg{randomForestSRC}.
}
\details{
\code{\link[randomForestSRC:predict.rfsrc]{randomForestSRC::predict.rfsrc()}} returns both cumulative hazard function (chf) and
survival function (surv) but uses different estimators to derive these. \code{chf} uses a
bootstrapped Nelson-Aalen estimator, (Ishwaran, 2008) whereas \code{surv} uses a bootstrapped
Kaplan-Meier estimator. The choice of which estimator to use is given by the extra
\code{estimator} hyper-parameter, default is \code{nelson}.
}
\section{Dictionary}{
 This \link{Learner} can be instantiated via the
\link[mlr3misc:Dictionary]{dictionary} \link{mlr_learners} or with the associated
sugar function \code{\link[=lrn]{lrn()}}:\preformatted{mlr_learners$get("surv.rfsrc")
lrn("surv.rfsrc")
}
}

\section{Meta Information}{

\itemize{
\item Task type: \dQuote{surv}
\item Predict Types: \dQuote{crank}, \dQuote{distr}
\item Feature Types: \dQuote{logical}, \dQuote{integer}, \dQuote{numeric}, \dQuote{factor}
\item Required Packages: \CRANpkg{mlr3}, \CRANpkg{mlr3proba}, \CRANpkg{mlr3extralearners}, \CRANpkg{randomForestSRC}, \CRANpkg{pracma}
}
}

\section{Parameters}{
\tabular{lllll}{
   Id \tab Type \tab Default \tab Levels \tab Range \cr
   ntree \tab integer \tab 1000 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   mtry \tab integer \tab - \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   mtry.ratio \tab numeric \tab - \tab  \tab \eqn{[0, 1]}{[0, 1]} \cr
   nodesize \tab integer \tab 15 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   nodedepth \tab integer \tab - \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   splitrule \tab character \tab logrank \tab logrank, bs.gradient, logrankscore \tab - \cr
   nsplit \tab integer \tab 10 \tab  \tab \eqn{[0, \infty)}{[0, Inf)} \cr
   importance \tab character \tab FALSE \tab FALSE, TRUE, none, permute, random, anti \tab - \cr
   block.size \tab integer \tab 10 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   bootstrap \tab character \tab by.root \tab by.root, by.node, none, by.user \tab - \cr
   samptype \tab character \tab swor \tab swor, swr \tab - \cr
   samp \tab untyped \tab - \tab  \tab - \cr
   membership \tab logical \tab FALSE \tab TRUE, FALSE \tab - \cr
   sampsize \tab untyped \tab - \tab  \tab - \cr
   sampsize.ratio \tab numeric \tab - \tab  \tab \eqn{[0, 1]}{[0, 1]} \cr
   na.action \tab character \tab na.omit \tab na.omit, na.impute \tab - \cr
   nimpute \tab integer \tab 1 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   ntime \tab integer \tab - \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   cause \tab integer \tab - \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   proximity \tab character \tab FALSE \tab FALSE, TRUE, inbag, oob, all \tab - \cr
   distance \tab character \tab FALSE \tab FALSE, TRUE, inbag, oob, all \tab - \cr
   forest.wt \tab character \tab FALSE \tab FALSE, TRUE, inbag, oob, all \tab - \cr
   xvar.wt \tab untyped \tab - \tab  \tab - \cr
   split.wt \tab untyped \tab - \tab  \tab - \cr
   forest \tab logical \tab TRUE \tab TRUE, FALSE \tab - \cr
   var.used \tab character \tab FALSE \tab FALSE, all.trees, by.tree \tab - \cr
   split.depth \tab character \tab FALSE \tab FALSE, all.trees, by.tree \tab - \cr
   seed \tab integer \tab - \tab  \tab \eqn{(-\infty, -1]}{(-Inf, -1]} \cr
   do.trace \tab logical \tab FALSE \tab TRUE, FALSE \tab - \cr
   statistics \tab logical \tab FALSE \tab TRUE, FALSE \tab - \cr
   get.tree \tab untyped \tab - \tab  \tab - \cr
   outcome \tab character \tab train \tab train, test \tab - \cr
   ptn.count \tab integer \tab 0 \tab  \tab \eqn{[0, \infty)}{[0, Inf)} \cr
   estimator \tab character \tab nelson \tab nelson, kaplan \tab - \cr
   cores \tab integer \tab 1 \tab  \tab \eqn{[1, \infty)}{[1, Inf)} \cr
   save.memory \tab logical \tab FALSE \tab TRUE, FALSE \tab - \cr
}
}

\section{Custom mlr3 defaults}{

\itemize{
\item \code{cores}:
\itemize{
\item Actual default: Auto-detecting the number of cores
\item Adjusted default: 1
\item Reason for change: Threading conflicts with explicit parallelization via \CRANpkg{future}.
}
\item \code{mtry}:
\itemize{
\item This hyperparameter can alternatively be set via the added hyperparameter \code{mtry.ratio}
as \code{mtry = max(ceiling(mtry.ratio * n_features), 1)}.
Note that \code{mtry} and \code{mtry.ratio} are mutually exclusive.
}
\item \code{sampsize}:
\itemize{
\item This hyperparameter can alternatively be set via the added hyperparameter \code{sampsize.ratio}
as \code{sampsize = max(ceiling(sampsize.ratio * n_obs), 1)}.
Note that \code{sampsize} and \code{sampsize.ratio} are mutually exclusive.
}
}
}

\examples{
if (requireNamespace("mlr3proba", quietly = TRUE) && requireNamespace("randomForestSRC", quietly = TRUE) && requireNamespace("pracma", quietly = TRUE)) {
  learner = mlr3::lrn("surv.rfsrc")
  print(learner)

  # available parameters:
  learner$param_set$ids()
}
}
\references{
Ishwaran H, Kogalur UB, Blackstone EH, Lauer MS (2008).
\dQuote{Random survival forests.}
\emph{The Annals of Applied Statistics}, \bold{2}(3).
\doi{10.1214/08-aoas169}, \url{https://doi.org/10.1214/08-aoas169}.

Breiman, Leo (2001).
\dQuote{Random Forests.}
\emph{Machine Learning}, \bold{45}(1), 5--32.
ISSN 1573-0565, \doi{10.1023/A:1010933404324}.
}
\seealso{
\itemize{
\item \link[mlr3misc:Dictionary]{Dictionary} of \link[mlr3:Learner]{Learners}: \link[mlr3:mlr_learners]{mlr3::mlr_learners}.
\item \code{as.data.table(mlr_learners)} for a table of available \link[=Learner]{Learners} in the running session (depending on the loaded packages).
\item Chapter in the \href{https://mlr3book.mlr-org.com/}{mlr3book}: \url{https://mlr3book.mlr-org.com/basics.html#learners}
\item \CRANpkg{mlr3learners} for a selection of recommended learners.
\item \CRANpkg{mlr3cluster} for unsupervised clustering learners.
\item \CRANpkg{mlr3pipelines} to combine learners with pre- and postprocessing steps.
\item \CRANpkg{mlr3tuning} for tuning of hyperparameters, \CRANpkg{mlr3tuningspaces} for established default tuning spaces.
}
}
\author{
RaphaelS1
}
\section{Super classes}{
\code{\link[mlr3:Learner]{mlr3::Learner}} -> \code{\link[mlr3proba:LearnerSurv]{mlr3proba::LearnerSurv}} -> \code{LearnerSurvRandomForestSRC}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{LearnerSurvRandomForestSRC$new()}}
\item \href{#method-importance}{\code{LearnerSurvRandomForestSRC$importance()}}
\item \href{#method-selected_features}{\code{LearnerSurvRandomForestSRC$selected_features()}}
\item \href{#method-oob_error}{\code{LearnerSurvRandomForestSRC$oob_error()}}
\item \href{#method-clone}{\code{LearnerSurvRandomForestSRC$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="base_learner">}\href{../../mlr3/html/Learner.html#method-base_learner}{\code{mlr3::Learner$base_learner()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="format">}\href{../../mlr3/html/Learner.html#method-format}{\code{mlr3::Learner$format()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="help">}\href{../../mlr3/html/Learner.html#method-help}{\code{mlr3::Learner$help()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict">}\href{../../mlr3/html/Learner.html#method-predict}{\code{mlr3::Learner$predict()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict_newdata">}\href{../../mlr3/html/Learner.html#method-predict_newdata}{\code{mlr3::Learner$predict_newdata()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="print">}\href{../../mlr3/html/Learner.html#method-print}{\code{mlr3::Learner$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="reset">}\href{../../mlr3/html/Learner.html#method-reset}{\code{mlr3::Learner$reset()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="train">}\href{../../mlr3/html/Learner.html#method-train}{\code{mlr3::Learner$train()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this \link[R6:R6Class]{R6} class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerSurvRandomForestSRC$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-importance"></a>}}
\if{latex}{\out{\hypertarget{method-importance}{}}}
\subsection{Method \code{importance()}}{
The importance scores are extracted from the model slot \code{importance}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerSurvRandomForestSRC$importance()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Named \code{numeric()}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-selected_features"></a>}}
\if{latex}{\out{\hypertarget{method-selected_features}{}}}
\subsection{Method \code{selected_features()}}{
Selected features are extracted from the model slot \code{var.used}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerSurvRandomForestSRC$selected_features()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{character()}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-oob_error"></a>}}
\if{latex}{\out{\hypertarget{method-oob_error}{}}}
\subsection{Method \code{oob_error()}}{
OOB error extracted from the model slot \code{err.rate}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerSurvRandomForestSRC$oob_error()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
\code{numeric()}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerSurvRandomForestSRC$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
