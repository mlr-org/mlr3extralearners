% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/learner_survival_surv_finegray_coxph.R
\name{LearnerSurvFineGrayCoxPH}
\alias{LearnerSurvFineGrayCoxPH}
\title{Fine-Gray Competing Risks Model with Cox Proportional Hazards}
\value{
For \code{predict()}, a list with \code{crank} (numeric), \code{lp} (numeric), and \code{distr}
(matrix of survival probabilities with times as colnames).
}
\description{
A learner for fitting a Fine-Gray competing risks model using Cox proportional hazards.
Estimates subdistribution hazard for a specified event type with competing events, supporting weights.
}
\section{Usage}{


\if{html}{\out{<div class="sourceCode">}}\preformatted{learner <- LearnerSurvFineGrayCoxPH$new()
}\if{html}{\out{</div>}}
}

\section{Parameters}{

\itemize{
\item \code{ties}: Character, method for handling ties ("efron" (default), "breslow", "exact").
\item \code{iter.max}: Integer, max iterations for Cox fit (default: 20, range: 1-1000).
\item \code{eps}: Numeric, convergence threshold (default: 1e-9, range: 1e-12 to 1e-4).
\item \code{robust}: Logical, compute robust variance (default: FALSE).
\item \code{target_event}: Event type to model (default: second level if NULL).
\item \code{singular.ok}: Logical, allow singular predictors (default: TRUE).
}
}

\section{Predict Types}{

\itemize{
\item \code{crank}: Continuous ranking (linear predictor).
\item \code{lp}: Linear predictor.
\item \code{distr}: Survival probabilities (matrix with times as colnames).
}
}

\section{Properties}{

\itemize{
\item Supports observation weights via the task's weights role (set via \code{weights} argument or \verb{$set_col_roles()}).
}
}

\section{Methods}{

\itemize{
\item \code{new()}: Alias for \code{initialize()}, creates a new instance of the learner with default parameters.
\item \code{train(task)}: Train the model on a survival task.
\item \code{predict(task)}: Predict on new data from a trained model.
}
}

\section{Super classes}{
\code{\link[mlr3:Learner]{mlr3::Learner}} -> \code{\link[mlr3proba:LearnerSurv]{mlr3proba::LearnerSurv}} -> \code{LearnerSurvFineGrayCoxPH}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-LearnerSurvFineGrayCoxPH-new}{\code{LearnerSurvFineGrayCoxPH$new()}}
\item \href{#method-LearnerSurvFineGrayCoxPH-clone}{\code{LearnerSurvFineGrayCoxPH$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="base_learner"><a href='../../mlr3/html/Learner.html#method-Learner-base_learner'><code>mlr3::Learner$base_learner()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="encapsulate"><a href='../../mlr3/html/Learner.html#method-Learner-encapsulate'><code>mlr3::Learner$encapsulate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="format"><a href='../../mlr3/html/Learner.html#method-Learner-format'><code>mlr3::Learner$format()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="help"><a href='../../mlr3/html/Learner.html#method-Learner-help'><code>mlr3::Learner$help()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict"><a href='../../mlr3/html/Learner.html#method-Learner-predict'><code>mlr3::Learner$predict()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="predict_newdata"><a href='../../mlr3/html/Learner.html#method-Learner-predict_newdata'><code>mlr3::Learner$predict_newdata()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="print"><a href='../../mlr3/html/Learner.html#method-Learner-print'><code>mlr3::Learner$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="reset"><a href='../../mlr3/html/Learner.html#method-Learner-reset'><code>mlr3::Learner$reset()</code></a></span></li>
<li><span class="pkg-link" data-pkg="mlr3" data-topic="Learner" data-id="train"><a href='../../mlr3/html/Learner.html#method-Learner-train'><code>mlr3::Learner$train()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerSurvFineGrayCoxPH-new"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerSurvFineGrayCoxPH-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new Fine-Gray Cox PH learner with its default hyperparameter settings.
No arguments are required; hyperparameters are defined and set via the \code{paradox} parameter set.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerSurvFineGrayCoxPH$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-LearnerSurvFineGrayCoxPH-clone"></a>}}
\if{latex}{\out{\hypertarget{method-LearnerSurvFineGrayCoxPH-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LearnerSurvFineGrayCoxPH$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
